searchState.loadedDescShard("cedarling", 0, "Cedarling\nError encountered while parsing Action to EntityUid\nConfiguration to specify authorization workflow.\nError type for Authorization Service\nResult of authorization and evaluation cedar policy based …\nBootstrap configuration properties for configuration …\nError while parse <code>BootstrapConfigRaw</code>\nRepresents errors that may occur while loading a …\nStruct that represent mapping mapping <code>Bootstrap properties</code> …\nError returned when both <code>CEDARLING_USER_AUTHZ</code> and …\nError encountered while building the context for the …\nError encountered while building Cedar Entities\nError encountered while building Role entity in an …\nThe instance of the Cedarling application. It is safe to …\nError returned when multiple policy store sources were …\nError encountered while validating context according to …\nDebug level\nError returned when parsing the file as JSON fails.\nError returned when parsing the file as YAML fails.\nRepresent as disabled.\nError level\nRepresent as enabled.\nError encountered while parsing all entities to json for …\nBootstrap Configurations for the JWT to Cedar entity …\nCedar policy entity data fields represent EntityUid\nThe names of the entities in the schema\nError encountered while executing the rule for principals\nFatal level\nEnum varians that represent if feature is enabled or …\nRead policy from a JSON File.\nRead policy from a YAML File.\nInfo level\nDefines the level of validation for ID tokens.\nError encountered while building the context for the …\nErrors that can occur during initialization Cedarling.\nError returned when the file format is unsupported.\nError encountered while creating <code>cedar_policy::Request</code> for …\nRead the policy directly from a raw JSON string.\nJsonLogic rule using JsonLogic Default implementation:\nThe set of Bootstrap properties related to JWT validation.\nError returned when failing to load a local JWKS\nThe logger sends log data to the server (corporate …\nLogger send log messages to <code>Lock</code> server\nFetch the policies from the Lock Master service using a …\nA set of properties used to configure logging in the …\nLog levels Fatal level is the highest, trace is lowest\nLog Storage interface for getting log entries from the …\nLog type configuration. <code>CEDARLING_LOG_TYPE</code> in bootstrap …\nType of logger\nLogger holds all logs in database (in memory) with …\nLogger that collect messages in memory. Log entities …\nConfiguration for memory log.\nError returned when the boostrap property <code>CEDARLING_LOG_TTL</code>…\nError returned when no policy store source was provided.\nNo validation is performed on the ID token.\nLogger do nothing. It means that all logs will be ignored.\nDisabled logger\n<code>PolicyStoreConfig</code> - Configuration for the policy store.\n<code>PolicyStoreSource</code> represents the source from which …\nError encountered while processing JWT token data\nError returned when the file cannot be read.\nBox to store authorization data\nBox to store authorization data, with any additional …\nError while preparing config for internal services\nError while initializing a Service\nLogger writes log information to std output stream.\nLogger that print logs to stdout\nStrict validation of the ID token.\nTrace level\nValidation options related to JSON Web Tokens (JWT).\nThe attribute that will be used to create the Role entity …\nError returned when the policy store file is in an …\nError encountered while checking if the Entities adhere to …\nWarn level\nRead the policy directly from a raw YAML string.\nReturns a default configuration for validating Access …\ncedar_policy action\ncedar_policy action\nAdds all supported algorithms to to …\nHuman friendly identifier for the application\n<code>CEDARLING_APPLICATION_NAME</code> in bootstrap properties …\nentity attributes\nRequires the <code>aud</code> claim to be present in the JWT.\nHow often to send health messages to Lock Master (0 to …\nHow often to send telemetry messages to Lock Master (0 to …\nHow often to send log messages to Lock Master (0 to turn …\nA set of properties used to configure authorization …\nAuthorize request makes authorization decision based on …\nAuthorize request with unsigned data. makes authorization …\nToggles building the <code>User</code> entity\nToggles building the <code>Workload</code> entity\nDecision of result works based on […\ncontext to be used in cedar_policy\ncontext to be used in cedar_policy\nResult of authorization true means <code>ALLOW</code> false means <code>Deny</code>\nToken claims that will be used for decision logging. …\nToken claims that will be used for decision logging. …\nList of claims to map from user entity, such as [“sub”…\nList of claims to map from user entity, such as [“sub”…\nList of claims to map from user entity, such as [“…\nList of claims to map from user entity, such as [“…\nCedarling will use the strictest validation options by …\nControls whether Cedarling should listen for SSE config …\nA set of properties used to configure the JWTs to Cedar …\nThe names of the buildable Cedar entity type names\nentity type name\nRequires the <code>exp</code> claim to be present in the JWT and the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse bool to <code>FeatureToggle</code>.\nLoad config environment variables. If you need with …\nDeserializes a JSON string into <code>EntityData</code>\nConstruct an instance from BootstrapConfigRaw\nConstruct <code>BootstrapConfig</code> from environment variables and …\nConstruct <code>BootstrapConfig</code> from environment variables and …\nParse string to <code>LoggerType</code> enum.\nGet specific log entry\nReturns a list of all log ids\nGet logs by request_id. Return log entries that match the …\nGet log by request_id and tag, like composite key …\nGet logs by tag, like <code>log_kind</code> or <code>log level</code>. Tag can be …\nRequires the <code>iat</code> claim to be present in the JWT.\nentity id\nReturns a default configuration for validating ID Tokens.\nSets the validation level for ID tokens.\nVarying levels of validations based on the preference of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if is enabled.\nThe entity type name of the <code>TrustedIssuer</code> entity\nRequires the <code>iss</code> claim to be present in the JWT and the …\nRequires the <code>jti</code> claim to be present in the JWT.\nA Json Web Key Store (JWKS) with public keys.\nA set of properties used to configure JWT in the <code>Cedarling</code> …\nCheck the signature for all the Json Web Tokens.\nWhether to check the signature of all JWT tokens.\nCedarling will only accept tokens signed with these …\nWhether to check the status of the JWT.\nWhether to check the status of the JWT. On startup.\nControls whether Cedarling should listen for updates from …\nLoads a <code>BootstrapConfig</code> from a file.\nLoads a <code>BootstrapConfig</code> from a JSON string\nPath to a local file pointing containing a JWKS.\nJSON object with policy store\nIf Enabled, the Cedarling will connect to the Lock Master …\nURI where Cedarling can get JSON file with all required …\nSSA for DCR in a Lock Master deployment. The Cedarling …\nA set of properties used to configure logging in the …\nLog level filter for logging. TRACE is lowest. FATAL is …\nLog level filter for logging. TRACE is lowest. FATAL is …\nMaximum size of a single log entity in bytes using […\nMaximum number of log entities that can be stored using […\n<code>CEDARLING_LOG_TTL</code> in bootstrap properties documentation. …\nIf <code>log_type</code> is set to [<code>LogType::Memory</code>], this is the TTL …\n<code>CEDARLING_LOG_TYPE</code> in bootstrap properties documentation.\nHow the Logs will be presented.\nMapping name of cedar schema TrustedIssuer entity\nMapping name of cedar schema Role entity.\nMapping name of cedar schema User entity\nMapping name of cedar schema Workload entity.\n<code>CEDARLING_LOG_MAX_ITEM_SIZE</code> in bootstrap properties …\n<code>CEDARLING_LOG_MAX_ITEMS</code> in bootstrap properties …\nRequires the <code>nbf</code> claim to be present in the JWT.\nCreate a new <code>JsonRule</code> from a JSON value.\nCreate a new instance of the Cedarling application.\nCreate a new instance of the Cedarling application. …\nCreates a new <code>JwtConfig</code> instance with validation turned …\nResult of authorization where principal is <code>Jans::User</code>\nA set of properties used to load <code>PolicyStore</code> in the …\nAn identifier for the policy store.\nPath to a Policy Store JSON file\nLocation of policy store JSON, used if policy store is not …\nReturn logs and remove them from the storage\nSpecifies what boolean operation to use for the <code>USER</code> and …\nSpecifies what boolean operation to use for the <code>USER</code> and …\nResult of authorization for all principals. This field is …\nContains the JWTs that will be used for the AuthZ request\nRequest ID, generated per each request call, is used to …\nCollects all the required claims into a HashSet.\ncedar_policy resource data\ncedar_policy resource data\nThe entity type name of the <code>Role</code> entity\nOnly tokens signed with algorithms in this list can be …\nSpecifies the source from which the policy will be read.\nRequires the <code>sub</code> claim to be present in the JWT.\nContains the JWTs that will be used for the AuthZ request\nThe attribute to use when creating Role entities in the …\nMapping name of cedar schema Role entity.\nWhen <code>enabled</code>, Cedar engine authorization is queried for a …\nWhen <code>enabled</code>, Cedar engine authorization is queried for a …\nThe entity type name of the <code>User</code> entity\nWhen <code>enabled</code>, Cedar engine authorization is queried for a …\nReturns a default configuration for validating Userinfo …\nEnables building the <code>User</code> entity\nEnables building the <code>Workload</code> entity\nResult of authorization where principal is <code>Jans::Workload</code>\nThe entity type name of the <code>Workload</code> entity\nWhen <code>enabled</code>, Cedar engine authorization is queried for a …")